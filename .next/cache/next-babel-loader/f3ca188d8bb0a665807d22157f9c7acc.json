{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oladipupooluwatobi/Desktop/AutoMobile/hooks/use-request.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { useState } from 'react';\nexport default (({\n  url,\n  method,\n  body,\n  onSuccess\n}) => {\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(null);\n\n  const doRequest = async (props = {}) => {\n    try {\n      setErrors(null);\n      const response = await axios[method](url, _objectSpread(_objectSpread({}, body), props));\n\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (err) {\n      setErrors( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Ooops....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"my-0\",\n          children: err.response.data.errors.map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: err.message\n          }, err.message, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return {\n    doRequest,\n    errors\n  };\n});","map":{"version":3,"sources":["/Users/oladipupooluwatobi/Desktop/AutoMobile/hooks/use-request.js"],"names":["axios","useState","url","method","body","onSuccess","errors","setErrors","doRequest","props","response","data","err","map","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,gBAAe,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KAAsC;AACnD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMO,SAAS,GAAG,OAAOC,KAAK,GAAG,EAAf,KAAsB;AACtC,QAAI;AACFF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,YAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACG,MAAD,CAAL,CAAcD,GAAd,kCAAwBE,IAAxB,GAAiCK,KAAjC,EAAvB;;AAEA,UAAIJ,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACK,QAAQ,CAACC,IAAV,CAAT;AACD;;AAED,aAAOD,QAAQ,CAACC,IAAhB;AACD,KATD,CASE,OAAOC,GAAP,EAAY;AACZL,MAAAA,SAAS,eACP;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,oBACGK,GAAG,CAACF,QAAJ,CAAaC,IAAb,CAAkBL,MAAlB,CAAyBO,GAAzB,CAA8BD,GAAD,iBAC5B;AAAA,sBAAuBA,GAAG,CAACE;AAA3B,aAASF,GAAG,CAACE,OAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,CAAT;AAUD;AACF,GAtBD;;AAwBA,SAAO;AAAEN,IAAAA,SAAF;AAAaF,IAAAA;AAAb,GAAP;AACD,CA5BD","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nexport default ({ url, method, body, onSuccess }) => {\n  const [errors, setErrors] = useState(null);\n\n  const doRequest = async (props = {}) => {\n    try {\n      setErrors(null);\n      const response = await axios[method](url, { ...body, ...props });\n\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (err) {\n      setErrors(\n        <div className=\"alert alert-danger\">\n          <h4>Ooops....</h4>\n          <ul className=\"my-0\">\n            {err.response.data.errors.map((err) => (\n              <li key={err.message}>{err.message}</li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n  };\n\n  return { doRequest, errors };\n};\n"]},"metadata":{},"sourceType":"module"}